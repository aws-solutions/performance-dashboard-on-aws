{
	"info": {
		"_postman_id": "13dcbab0-caf6-45da-b2d1-dbc025d23f7f",
		"name": "Integration Tests",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Create topic area",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "96e1f07c-c28f-4e75-af16-b3f24c054343",
						"exec": [
							"const testId = new Date().getTime();",
							"pm.collectionVariables.set(\"testId\", testId);",
							"pm.collectionVariables.set(\"topicarea.name\", testId);"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "0640c5dc-2f09-40e4-8ace-07a96fd06f41",
						"exec": [
							"pm.test(\"returns 200 OK\", () => {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"returns the topic area id\", () => {",
							"    const topicarea = pm.response.json();",
							"    pm.expect(topicarea.id).to.exist;",
							"    pm.collectionVariables.set(\"topicarea.id\", topicarea.id);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"{{topicarea.name}}\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/topicarea",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"topicarea"
					]
				},
				"description": "Create new topic area for testing purposes"
			},
			"response": []
		},
		{
			"name": "List topic areas",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "3b2969bb-44e2-4d66-98e8-80277c05a982",
						"exec": [
							"pm.test(\"returns 200 OK\", () => {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"created topic area is listed\", () => {",
							"    const expectedId = pm.collectionVariables.get(\"topicarea.id\");",
							"    const topicareas = pm.response.json();",
							"    const filtered = topicareas.filter(topicarea => topicarea.id === expectedId);",
							"    const expectedTopicarea = filtered[0];",
							"    pm.expect(expectedTopicarea).to.not.be.undefined;",
							"    pm.expect(expectedTopicarea.id).to.equal(expectedId);",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "375b94f3-694d-40a3-b706-b75506036365",
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/topicarea",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"topicarea"
					]
				},
				"description": "List topic areas to verify the newly created topic area shows up correctly. "
			},
			"response": []
		},
		{
			"name": "Create dashboard",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "2a01f039-056a-4cee-864c-3d99f45aa011",
						"exec": [
							"const testId = pm.variables.get(\"testId\");",
							"pm.collectionVariables.set(\"dashboard.name\", testId);"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "d4df44fc-c6cd-4a78-8051-83eb2a797d00",
						"exec": [
							"pm.test(\"returns 200 OK\", () => {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"returns the dashboard\", () => {",
							"    const dashboard = pm.response.json();",
							"    pm.expect(dashboard.id).to.exist;",
							"    pm.collectionVariables.set(\"dashboard.id\", dashboard.id);",
							"",
							"    pm.expect(dashboard.updatedAt).to.exist;",
							"    pm.collectionVariables.set(\"dashboard.updatedAt\", dashboard.updatedAt);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"{{dashboard.name}}\",\n    \"topicAreaId\": \"{{topicarea.id}}\",\n    \"description\": \"Some markdown for [testing](https://www.google.com)\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/dashboard",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"dashboard"
					]
				},
				"description": "Creates a dashboard in the newly created topic area"
			},
			"response": []
		},
		{
			"name": "Edit dashboard",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "74226553-8800-475f-816a-7b9b8a74acf3",
						"exec": [
							"pm.test(\"returns 200 OK\", () => {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "6d6901fe-6622-4f8b-80ea-bd16799a2498",
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"{{dashboard.name}} modified\",\n    \"topicAreaId\": \"{{topicarea.id}}\",\n    \"description\": \"Updated markdown **here**\",\n    \"updatedAt\": \"{{dashboard.updatedAt}}\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/dashboard/{{dashboard.id}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"dashboard",
						"{{dashboard.id}}"
					]
				},
				"description": "Changes the name of the test dashboard"
			},
			"response": []
		},
		{
			"name": "Get dashboard",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "d3d6ef5f-3983-4935-aa8b-516aabdf862b",
						"exec": [
							"pm.test(\"returns 200 OK\", () => {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"dashboard name matches\", () => {",
							"    const dashboard = pm.response.json();",
							"    const name = pm.collectionVariables.get(\"dashboard.name\");",
							"    const newName = name + \" modified\";",
							"    pm.expect(dashboard.name).to.equal(newName);",
							"    pm.collectionVariables.set(\"dashboard.name\", newName);",
							"});",
							"",
							"pm.test(\"dashboard description matches\", () => {",
							"    const dashboard = pm.response.json();",
							"    pm.expect(dashboard.description).to.equal(\"Updated markdown **here**\");",
							"});",
							"",
							"pm.test(\"dashboard topicarea matches\", () => {",
							"    const dashboard = pm.response.json();",
							"    const topicAreaId = pm.collectionVariables.get(\"topicarea.id\");",
							"    pm.expect(dashboard.topicAreaId).to.equal(topicAreaId);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/dashboard/{{dashboard.id}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"dashboard",
						"{{dashboard.id}}"
					]
				},
				"description": "Get dashboard by id to verify if new name has been set and dashboard can be retrieved properly."
			},
			"response": []
		},
		{
			"name": "Create text widget",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "950c8a31-8699-4117-9496-49f55b3fb9e0",
						"exec": [
							"pm.test(\"returns 200 OK\", () => {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"returns the widget id\", () => {",
							"    const textwidget = pm.response.json();",
							"    pm.expect(textwidget.id).to.exist;",
							"    pm.collectionVariables.set(\"textwidget.id\", textwidget.id);",
							"",
							"    pm.expect(textwidget.updatedAt).to.exist;",
							"    pm.collectionVariables.set(\"textwidget.updatedAt\", textwidget.updatedAt);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"Text widget\",\n    \"widgetType\": \"Text\",\n    \"content\": {\n        \"text\": \"Lorem _ipsum_ **with markdown**\"\n    }\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/dashboard/{{dashboard.id}}/widget",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"dashboard",
						"{{dashboard.id}}",
						"widget"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create 2nd text widget",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "9d120e0e-34df-479f-86a4-b5a44360240d",
						"exec": [
							"pm.test(\"returns 200 OK\", () => {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"returns the widget id\", () => {",
							"    const textwidget = pm.response.json();",
							"    pm.expect(textwidget.id).to.exist;",
							"    pm.collectionVariables.set(\"textwidget2.id\", textwidget.id);",
							"",
							"    pm.expect(textwidget.updatedAt).to.exist;",
							"    pm.collectionVariables.set(\"textwidget2.updatedAt\", textwidget.updatedAt);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"Another text widget\",\n    \"widgetType\": \"Text\",\n    \"content\": {\n        \"text\": \"Basic text\"\n    }\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/dashboard/{{dashboard.id}}/widget",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"dashboard",
						"{{dashboard.id}}",
						"widget"
					]
				}
			},
			"response": []
		},
		{
			"name": "Check text widgets are in dashboard",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "0dd976cd-a966-4968-b8b5-3e93120230df",
						"exec": [
							"pm.test(\"returns 200 OK\", () => {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"text widget is included in dashboard\", () => {",
							"    const dashboard = pm.response.json();",
							"    const textwidgetId = pm.collectionVariables.get(\"textwidget.id\");",
							"    pm.expect(dashboard.widgets).to.exist;",
							"",
							"    const widgets = dashboard.widgets.filter(widget => widget.id === textwidgetId);",
							"    pm.expect(widgets.length).to.equal(1);",
							"",
							"    const textwidget = widgets[0];",
							"    pm.expect(textwidget.id).to.equal(textwidgetId);",
							"    pm.expect(textwidget.widgetType).to.equal(\"Text\");",
							"});",
							"",
							"pm.test(\"2nd text widget is included in dashboard\", () => {",
							"    const dashboard = pm.response.json();",
							"    const textwidgetId = pm.collectionVariables.get(\"textwidget2.id\");",
							"    pm.expect(dashboard.widgets).to.exist;",
							"",
							"    const widgets = dashboard.widgets.filter(widget => widget.id === textwidgetId);",
							"    pm.expect(widgets.length).to.equal(1);",
							"",
							"    const textwidget = widgets[0];",
							"    pm.expect(textwidget.id).to.equal(textwidgetId);",
							"    pm.expect(textwidget.widgetType).to.equal(\"Text\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/dashboard/{{dashboard.id}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"dashboard",
						"{{dashboard.id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Re-order widgets",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "c1e55959-364d-4a8a-a841-7a68cdaebd7e",
						"exec": [
							"pm.test(\"returns 200 OK\", () => {",
							"    pm.response.to.have.status(200);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"widgets\": [\n        {\n            \"id\": \"{{textwidget.id}}\",\n            \"order\": 2,\n            \"updatedAt\": \"{{textwidget.updatedAt}}\"\n        },\n        {\n            \"id\": \"{{textwidget2.id}}\",\n            \"order\": 1,\n            \"updatedAt\": \"{{textwidget2.updatedAt}}\"\n        }\n    ]\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/dashboard/{{dashboard.id}}/widgetorder",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"dashboard",
						"{{dashboard.id}}",
						"widgetorder"
					]
				}
			},
			"response": []
		},
		{
			"name": "Fetch latest dashboard updatedAt",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "6389e884-ed55-4615-b3da-2e9b0799130e",
						"exec": [
							"pm.test(\"returns 200 OK\", () => {",
							"    pm.response.to.have.status(200);",
							"    const dashboard = pm.response.json();",
							"    pm.collectionVariables.set(\"dashboard.updatedAt\", dashboard.updatedAt);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/dashboard/{{dashboard.id}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"dashboard",
						"{{dashboard.id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Verify draft dashboard is not yet public",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "10355027-016f-4660-8427-676d35c15b92",
						"exec": [
							"pm.test(\"returns 404 not found\", () => {",
							"    pm.response.to.have.status(404);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/public/dashboard/:id",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"public",
						"dashboard",
						":id"
					],
					"variable": [
						{
							"key": "id",
							"value": "{{dashboard.id}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Set dashboard to publish pending",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "6df27c49-2461-4710-adb9-2e1ed151a7db",
						"exec": [
							"pm.test(\"returns 200 OK\", () => {",
							"    pm.response.to.have.status(200);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"updatedAt\": \"{{dashboard.updatedAt}}\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/dashboard/{{dashboard.id}}/publishpending",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"dashboard",
						"{{dashboard.id}}",
						"publishpending"
					]
				}
			},
			"response": []
		},
		{
			"name": "Fetch latest dashboard updatedAt",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "b610cb4f-f05e-4ca4-85d7-c9c2d62def7a",
						"exec": [
							"pm.test(\"returns 200 OK\", () => {",
							"    pm.response.to.have.status(200);",
							"    const dashboard = pm.response.json();",
							"    pm.collectionVariables.set(\"dashboard.updatedAt\", dashboard.updatedAt);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/dashboard/{{dashboard.id}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"dashboard",
						"{{dashboard.id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Publish dashboard",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "b6fb2dd4-7249-42d4-b93a-b88c5e1f8c77",
						"exec": [
							"pm.test(\"returns 200 OK\", () => {",
							"    pm.response.to.have.status(200);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"updatedAt\": \"{{dashboard.updatedAt}}\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/dashboard/{{dashboard.id}}/publish",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"dashboard",
						"{{dashboard.id}}",
						"publish"
					]
				}
			},
			"response": []
		},
		{
			"name": "Verify dashboard shows in homepage",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "e7c398ec-3e14-4539-b25d-8115b4ea3f63",
						"exec": [
							"pm.test(\"returns 200 OK\", () => {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"homepage contains title and description\", () => {",
							"    const homepage = pm.response.json();",
							"    pm.expect(homepage.title).to.not.be.undefined;",
							"    pm.expect(homepage.description).to.not.be.undefined;",
							"});",
							"",
							"pm.test(\"homepage contains dashboard\", () => {",
							"    const homepage = pm.response.json();",
							"    pm.expect(homepage.dashboards).to.not.be.undefined;",
							"    ",
							"    const id = pm.collectionVariables.get(\"dashboard.id\");",
							"    const dashboards = homepage.dashboards;",
							"    const dashboard = homepage.dashboards.find(dash => dash.id === id);",
							"    pm.expect(dashboard).to.not.be.undefined;",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/public/homepage",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"public",
						"homepage"
					]
				}
			},
			"response": []
		},
		{
			"name": "Verify dashboard using public api",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "4817bb59-f031-4d52-85fb-728053821eb9",
						"exec": [
							"pm.test(\"returns 200 OK\", () => {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"response contains dashboard\", () => {",
							"    const id = pm.collectionVariables.get(\"dashboard.id\");",
							"    const dashboard = pm.response.json();",
							"    pm.expect(dashboard.id).to.equal(id);",
							"    pm.collectionVariables.set(\"dashboard.updatedAt\", dashboard.updatedAt);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/public/dashboard/:id",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"public",
						"dashboard",
						":id"
					],
					"variable": [
						{
							"key": "id",
							"value": "{{dashboard.id}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Create draft from Published dashboard",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "5b9581f5-274f-4795-b30e-607f5cd0af58",
						"exec": [
							"pm.test(\"returns 200 OK\", () => {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"returns new draft dashboard\", () => {",
							"    const draft = pm.response.json();",
							"    pm.expect(draft.id).to.exist;",
							"    pm.expect(draft.state).to.equal(\"Draft\");",
							"    pm.collectionVariables.set(\"dashboard2.id\", draft.id);",
							"});",
							"",
							"pm.test(\"new draft dashboard has a new id\", () => {",
							"    const dashboardId = pm.collectionVariables.get(\"dashboard.id\");",
							"    const draft = pm.response.json();",
							"    pm.expect(draft.id).not.to.equal(dashboardId);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/dashboard/{{dashboard.id}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"dashboard",
						"{{dashboard.id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Archive dashboard",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "f1e31908-7768-4b55-8ca3-fa2d6e3cf5aa",
						"exec": [
							"pm.test(\"returns 200 OK\", () => {",
							"    pm.response.to.have.status(200);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"updatedAt\": \"{{dashboard.updatedAt}}\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/dashboard/{{dashboard.id}}/archive",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"dashboard",
						"{{dashboard.id}}",
						"archive"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete text widget",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "216f60e9-6a7d-4b4f-a196-88e66f90b60a",
						"exec": [
							"pm.test(\"returns 200 OK\", () => {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/dashboard/{{dashboard.id}}/widget/{{textwidget.id}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"dashboard",
						"{{dashboard.id}}",
						"widget",
						"{{textwidget.id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete 2nd text widget",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "047951c8-d3f0-4f57-b65c-51feabe61f1b",
						"exec": [
							"pm.test(\"returns 200 OK\", () => {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/dashboard/{{dashboard.id}}/widget/{{textwidget2.id}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"dashboard",
						"{{dashboard.id}}",
						"widget",
						"{{textwidget2.id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete dashboard",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "d35c7566-6fe9-4fe3-8e3b-bf7cdf5a7a76",
						"exec": [
							"pm.test(\"returns 200 OK\", () => {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/dashboard/{{dashboard.id}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"dashboard",
						"{{dashboard.id}}"
					]
				},
				"description": "Deletes the test dashboard"
			},
			"response": []
		},
		{
			"name": "Delete draft dashboard",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "876792de-6980-4c76-93a5-8e77c4535cff",
						"exec": [
							"pm.test(\"returns 200 OK\", () => {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/dashboard/{{dashboard2.id}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"dashboard",
						"{{dashboard2.id}}"
					]
				},
				"description": "Deletes the test dashboard"
			},
			"response": []
		},
		{
			"name": "Delete topic area",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "12c1a22d-34a5-402f-8559-f8393901685d",
						"exec": [
							"pm.test(\"returns 200 OK\", () => {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/topicarea/{{topicarea.id}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"topicarea",
						"{{topicarea.id}}"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "41aed339-f228-40a6-8360-8fb12c2a9a56",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "9dccf20b-e80b-46a2-94fa-ffe389845ead",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"id": "598455bd-d540-4dee-96ff-829e9de93ced",
			"key": "baseUrl",
			"value": "http://localhost:8080"
		},
		{
			"id": "3b23c769-d19d-47d2-a2c3-46c9531d441d",
			"key": "token",
			"value": ""
		},
		{
			"id": "d4499fb3-1fbe-43ad-b66f-2e5ee6592943",
			"key": "testId",
			"value": ""
		},
		{
			"id": "ca3952fa-ed69-41d5-b23c-2d4a474df501",
			"key": "topicarea.id",
			"value": ""
		},
		{
			"id": "fd458a0d-03e7-4f6d-9511-d3384f22281a",
			"key": "topicarea.name",
			"value": ""
		},
		{
			"id": "3a854c61-2ea5-491f-be89-1f16b69f0509",
			"key": "dashboard.id",
			"value": ""
		},
		{
			"id": "cd824e16-459b-4df8-816a-408c9502fef8",
			"key": "dashboard.name",
			"value": ""
		},
		{
			"id": "2fb79890-e2e4-4a66-b8ac-86eb3c4d6d6a",
			"key": "dashboard.updatedAt",
			"value": ""
		},
		{
			"id": "a6693a2a-4577-48a5-9581-996fc316d1b0",
			"key": "dashboard2.id",
			"value": ""
		},
		{
			"id": "7882878f-8198-4ee2-8872-080b6d911c9f",
			"key": "textwidget.id",
			"value": ""
		},
		{
			"id": "eca7007d-e5e2-4d42-b15d-5001a03e5a10",
			"key": "textwidget.updatedAt",
			"value": ""
		},
		{
			"id": "ed7723c8-37e2-4334-8858-0b5819dfd2c8",
			"key": "textwidget2.id",
			"value": ""
		},
		{
			"id": "bde9ef2a-c013-4c1f-84f5-d2081c9a1c63",
			"key": "textwidget2.updatedAt",
			"value": ""
		}
	],
	"protocolProfileBehavior": {}
}